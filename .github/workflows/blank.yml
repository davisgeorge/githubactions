name: CI CD Pipeline
 
on:
  workflow_dispatch:
    inputs:
      branch:
        description: Enter the branch name
        required: true
 
jobs:
  build_deploy:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout  
      uses: actions/checkout@v3
      # with:
        # repository: Zensar-FXCM-Project/Trulioo
        # ref: ${{ github.event.inputs.branch }}
       
    # - name: Set Environment variables
    #   id: env-variables
    #   run: |
    #     if [[ ${{github.ref}} == "refs/heads/${{ github.event.inputs.branch }}" ]]; then
    #       echo "ENV_NAME=dev" >> $GITHUB_ENV
    #       echo "AWS_REGION=eu-west-2" >> $GITHUB_ENV
    #       echo "APP_NAME=backendservercicd" >> $GITHUB_ENV
    #       echo "EB_ENV_NAME=backendservercicd-env" >> $GITHUB_ENV
    #       echo "BUILD_FOLDER=fxcm_trulioo_dev" >> $GITHUB_ENV
    #       echo "TAG_NAME=v1.0.0" >> $GITHUB_ENV
    #       echo "TAG_MESSAGE=Tag for version 1.0.0" >> $GITHUB_ENV  
    #       echo "REPO_OWNER=Zensar-FXCM-Project" >> $GITHUB_ENV
    #       echo "REPO_NAME=Trulioo" >> $GITHUB_ENV
    #     else
    #       echo "ENV_VAR=qa" >> $GITHUB_ENV
    #       echo "AWS_REGION=eu-west-2" >> $GITHUB_ENV
    #     fi
    # - name: Set up AWS CLI
    #   uses: aws-actions/configure-aws-credentials@v3
    #   with:
    #     aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
    #     aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    #     aws-region: ${{env.AWS_REGION}}
       
    # - name: EBS Build
    #   uses: Zensar-FXCM-Project/SharedLibrary_GithubActions/.github/actions/ebs-build-test/@main
       
    # - name: Deploy to EBS
    #   uses: Zensar-FXCM-Project/SharedLibrary_GithubActions/.github/actions/ebs-deploy-test/@main
 
   - name: Get latest tag
      id: get_tag
      run: |
          git fetch --tags
          latest_tag=$(git for-each-ref --sort=-taggerdate --format '%(refname:short)' refs/tags | head -n 1)
          echo "Latest tag is $latest_tag"
          echo "TAG=${latest_tag}" >> $GITHUB_ENV
 
    - name: Set up Git
      run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "${{ github.actor }}"
 
    - name: Calculate new version
      id: version
      run: |
         IFS='.' read -ra parts <<< "${{ env.TAG }}"
          major="${parts[0]}"
          minor="${parts[1]}"
          patch="${parts[2]}"
         
          # Increment the version based on your versioning strategy
          # For example, incrementing the patch version:
          new_patch=$((patch + 1))
          new_version="${major}.${minor}.${new_patch}"
         
          echo "New version is $new_version"
          echo "NEW_TAG=${new_version}" >> $GITHUB_ENV
 
    - name: Create new tag
      run: |
          git tag -a "${{ env.NEW_TAG }}" -m "Release ${{ env.NEW_TAG }}"
          git push origin "${{ env.NEW_TAG }}"
